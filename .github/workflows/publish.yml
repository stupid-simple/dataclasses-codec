name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/dataclasses-codec

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build

    - name: Build package
      run: python -m build

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Generate release notes
      id: release_notes
      run: |
        echo "NOTES<<EOF" >> $GITHUB_OUTPUT
        echo "## dataclasses-codec v${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Installation" >> $GITHUB_OUTPUT
        echo "\`\`\`bash" >> $GITHUB_OUTPUT
        echo "pip install dataclasses-codec==${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
        echo "\`\`\`" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### What's Changed" >> $GITHUB_OUTPUT
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s (%h)" --no-merges >> $GITHUB_OUTPUT || echo "- Initial release" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ steps.release_notes.outputs.NOTES }}
        generate_release_notes: true
        files: |
          dist/*.whl
          dist/*.tar.gz

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

